.include <m328pdef.inc>

.def TEMP = r16  ;para operaciones temporales
.def ZH = r30  ;puntero Z para leer tablas
.def ZL = r31
.def FIGURA = r18  ;indice de la figura actual
.def FILA = r19  ;fila dentro de la figura
.def COL = r20  ;columna actual

.org 0x0000
  rjmp RESET
.org 0x0020
  rjmp TIMER0_COMPA_vect

RESET:
  ldi TEMP, 0xFF
  out DDRB, TEMP
  out DDRD, TEMP

  clr FIGURA
  clr FILA
  clr COL

  ldi TEMP,(1<<WGM01)
  out TCCR0A, TEMP
  ldi TEMP,(1<<CS02)|(1<<CS00)
  out TCCR0B, TEMP
  ldi TEMP, 250
  out OCR0A, TEMP
  ldi TEMP,(1<<OCIE0A)
  sts TOMSK0, TEMP

  sei
  rjmp MAIN

MAIN:
  rjmp MAIN

TIMER0:
  push TEMP
  push FIGURA
  push FILA
  push COL
  push ZL
  push ZH

  rcall SIGUIENTE_COLUMNA
  rcall MOSTRAR_FIGURA

  cpi COL, 7
  brne FIN_ISR
  inc FILA
  cpi FILA, 8
  brlo FIN_ISR
  clr FILA
  inc FIGURA
  cpi FIGURA, 5
  brlo FIN_ISR
  clr FIGURA

FIN_ISR:
  pop ZH
  pop ZL
  pop COL
  pop FILA
  pop FIGURA
  pop TEMP
  reti

MOSTRAR_FIGURA:
    ; funciÃ³n que 
    ldi ZL, low(JUMP_TABLE<<1)
    ldi ZH, high(JUMP_TABLE<<1)
    add ZL, FIGURA
    adc ZH, r1
    lpm          
    mov TEMP, r0
    lpm          
    mov r30, r0  
    lpm
    ijmp
    ret

Cara_Feliz:
.db 0x0, 0x24, 0x24, 0x0, 0x64, 0x3C, 0x0, 0x0
Cara_Triste:
.db 0x0, 0x24, 0x24, 0x0, 0x3C, 0x64, 0x0, 0x0
Corazon:
.db 0x0, 0x66, 0xFF, 0xFF, 0x7E, 0x3C, 0x18, 0x0 
Rombo: 
.db 0x18, 0x3C, 0x7E, 0xFF, 0xFF, 0x7E, 0x3C, 0x18
Alien: 
.db 0x18, 0x3C, 0x7E, 0xDB, 0xFF, 0x5A, 0x81, 0x42
