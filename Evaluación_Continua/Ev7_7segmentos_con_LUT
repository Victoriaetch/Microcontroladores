.org 0x0000
rjmp start

configurar:
	ldi r20, 255
	out DDRD, r20
	ldi r20, 0xff
	out DDRB, r20
	clr r20
	out PORTC, r20
	call guardar_codigos
	ret

esperar_inicio:
	nop
	ret

start:
  ldi r16, HIGH(RAMEND)
	out SPH, r16
	ldi r16, LOW(RAMEND)
	out SPL, r16
	call configurar
	call esperar_inicio
	ldi r16, 0x01
	call get_u
	call set_7seg_u
	rjmp start

get_u:
	mov		r20, r16
	andi	r20, 0x0f
	mov		r1, r20
	ret

set_7seg_u:
    mov r21,r20          
    andi r21,0x3F      
    out PORTB,r21

    mov r21,r20          
    sbrc r21,6           
    sbi PORTC,2        
    sbrs r21,6        
    cbi PORTC,2         

    ret

get_7seg_code:
	ldi r28,0x00 ;LOW(0x0100)
	ldi r29,0x01 ;HIGH(0x0100)
	add r28,r20
	ld r20, Y
	ret

guardar_codigos:
	ldi r28, 0x00 ;LOW(0x0100)
	ldi r29, 0x01 ;HIGH(0x0100)
	ldi r20,0b00111111 ;cargamos el 0
	ST Y+, r20
	ldi r20,0b00000110 ;cargamos el 1
	ST Y+, r20
	ldi r20,0b01011011 ;cargamos el 2
	ST Y+, r20
	ldi r20,0b01001111 ;cargamos el 3
	ST Y+, r20
	ldi r20,0b01100110  ;cargamos el 4
	ST Y+, r20
	ldi r20,0b01101101 ;cargamos el 5
	ST Y+, r20
	ldi r20,0b01111101 ;cargamos el 6
	ST Y+, r20
	ldi r20,0b00000111 ;cargamos el 7
	ST Y+, r20
	ldi r20, 0b01111111 ;cargamos el 8
	ST Y+, r20
	ldi r20,0b01101111 ;cargamos el 9
	ST Y+, r20
	ret

debounce:
    ldi r23,200
d1: dec r23
    brne d1
    ret

delay_2s:

    ldi r24, 100      ; bucle externo
del1:
    ldi r22, 255     ; bucle medio
del2:
    ldi r23, 255     ; bucle interno
del3:
    dec r23
    brne del3
    dec r22
    brne del2
    dec r24
    brne del1
    ret

