#include <Arduino.h>

// Columnas C1–C8 → D2–D9
const uint8_t columnas[8] = {2,3,4,5,6,7,8,9};

// Filas F1–F8 → D10–D13, A0–A3
const uint8_t filas[8] = {10,11,12,13,A0,A1,A2,A3};

// Función de retardo variable
void retardo_ms(uint16_t ms) {
  for(uint16_t i=0; i<ms; i++){
    delayMicroseconds(1000);
  }
}

// Figuras 8x8
uint8_t cara_feliz[8] = {0x00,0x24,0x24,0x00,0x64,0x3C,0x00,0x00};
uint8_t cara_triste[8] = {0x00,0x24,0x24,0x00,0x3C,0x64,0x00,0x00};
uint8_t corazon[8] = {0x00,0x66,0xFF,0xFF,0x7E,0x3C,0x18,0x00};
uint8_t rombo[8] = {0x18,0x3C,0x7E,0xFF,0xFF,0x7E,0x3C,0x18};
uint8_t alien[8] = {0x18,0x3C,0x7E,0xDB,0xFF,0x5A,0x81,0x42};

// Enciende la matriz según la figura
void mostrar_figura(uint8_t figura[8], uint16_t tiempo_retardo){
  for(uint8_t fila=0; fila<8; fila++){
    // Apagar todas las filas antes
    for(uint8_t f=0; f<8; f++) digitalWrite(filas[f], LOW);

    // Activar fila actual
    digitalWrite(filas[fila], HIGH);

    // Encender columnas según bits
    for(uint8_t col=0; col<8; col++){
      if(figura[fila] & (1<<col)) digitalWrite(columnas[col], LOW); // Común ánodo
      else digitalWrite(columnas[col], HIGH);
    }

    retardo_ms(tiempo_retardo);
  }
}

void setup(){
  // Configurar filas y columnas como salida
  for(uint8_t i=0; i<8; i++){
    pinMode(filas[i], OUTPUT);
    pinMode(columnas[i], OUTPUT);
    digitalWrite(filas[i], LOW);
    digitalWrite(columnas[i], HIGH); // columna apagada
  }
}

void loop(){
  mostrar_figura(cara_feliz, 200);
  mostrar_figura(cara_triste, 200);
  mostrar_figura(corazon, 200);
  mostrar_figura(rombo, 200);
  mostrar_figura(alien, 200);
}

