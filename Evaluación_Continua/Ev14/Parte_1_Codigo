// Define pines y constantes
#define trigPin 3
#define echoPin 4
#define pwmPin 6

#define MAX_DISTANCE_CM 200.0
#define MIN_DISTANCE_CM 5.0

void setup() {
  // Inicializa el pin Trig como salida
  pinMode(trigPin, OUTPUT);
  // Inicializa el pin Echo como entrada
  pinMode(echoPin, INPUT);
  // Inicializa el pin PWM para el LED como salida
  pinMode(pwmPin, OUTPUT);
}


void loop() {
  float duration;
  float distance_cm;
  int pwm_value;
  
  // Limpia el pin Trig
  digitalWrite(trigPin, LOW); 
  delayMicroseconds(10);
  // Genera el pulso de activación (Trigger)
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  // Mide la duración del pulso de Echo
  duration = pulseIn(echoPin, HIGH);
  
  // Calcula la distancia en centímetros
  distance_cm = duration * 0.017;
  
  // Limitar distancia dentro de rango
if (distance_cm < MIN_DISTANCE_CM) distance_cm = MIN_DISTANCE_CM;
if (distance_cm > MAX_DISTANCE_CM) distance_cm = MAX_DISTANCE_CM;

// Aplicar función cuadrática para sensibilidad cercana
float factor = 2.0 - (distance_cm - MIN_DISTANCE_CM) / (MAX_DISTANCE_CM - MIN_DISTANCE_CM);
factor = factor * factor;  // cuadrática, más cambios cercanos
  
 // Mapear factor a PWM (25-255)
  pwm_value = 25 + factor * (255 - 25);
  
  analogWrite(pwmPin, pwm_value);
  
  delay(200);  
}
