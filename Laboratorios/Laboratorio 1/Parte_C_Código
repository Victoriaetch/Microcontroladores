; =================================================================
; Parte C: 
; =================================================================
.include "m328pdef.inc"

.def tmp     = r16
.def sample  = r17
.def idx     = r20  

.cseg
.org 0x0000
    rjmp RESET

RESET:
    cli 
    ;Stack
    ldi tmp, high(RAMEND)
    out SPH, tmp
    ldi tmp, low(RAMEND)
    out SPL, tmp

      ; PORTD como salida (R-2R)
    ldi tmp, 0xFF
    out DDRD, tmp
    clr tmp
    out PORTD, tmp

    ; inicio de LUT
    ldi r30, low(LUT*2)
    ldi r31, high(LUT*2)

    ; idx = 0
    clr idx

    ldi tmp, 9
    out OCR0A, tmp
    ldi tmp, (1<<WGM01)          ; CTC con OCR0A
    out TCCR0A, tmp
    ldi tmp, (1<<CS01)|(1<<CS00) ; prescaler /64
    out TCCR0B, tmp
    ldi tmp, (1<<OCF0A)          ; limpiar bandera inicial
    out TIFR0, tmp

main_loop:
wait_flag:
    sbis TIFR0, OCF0A           
    rjmp wait_flag

    ; limpiar bandera
    ldi tmp, (1<<OCF0A)
    out TIFR0, tmp

    ; siguiente muestra
    lpm sample, Z+
    out PORTD, sample

    ; cuando vuelve a 0, reiniciar Z
    inc idx
    brne main_loop               

    ldi r30, low(LUT*2)
    ldi r31, high(LUT*2)
    rjmp main_loop
; -----------------------
; LUT: 256 bytes en memoria de programa
; -----------------------
LUT:
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
    .db 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
