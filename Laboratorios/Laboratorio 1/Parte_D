.include "m328Pdef.inc"

.equ F_CPU = 16000000
.equ BAUD_RATE = 9600
.equ UBRR_VAL = (F_CPU/16/BAUD_RATE)-1

.equ BAJA_SOLENOIDE  = PD2    ; D2 - X0
.equ SUBIR_SOLENOIDE = PD3    ; D3 - X1
.equ MOV_ABAJO       = PD4    ; D4 - X5
.equ MOV_ARRIBA      = PD5    ; D5 - X6
.equ MOV_IZQUIERDA   = PD6    ; D6 - X7
.equ MOV_DERECHA     = PD7    ; D7 - X10

.equ MASK_CONTROL = (1<<BAJA_SOLENOIDE)|(1<<SUBIR_SOLENOIDE)|(1<<MOV_ABAJO)|(1<<MOV_ARRIBA)|(1<<MOV_IZQUIERDA)|(1<<MOV_DERECHA)

; Tiempos de delay (ajustar según necesidades PROBAR)
.equ DELAY_CORTO = 100
.equ DELAY_MEDIO = 200
.equ DELAY_LARGO = 500

.def temp = r16
.def comando = r17
.def contador = r18
.def temp2 = r19

.cseg
.org 0x0000
    jmp RESET
.org URXCaddr
    jmp USART_RXC

RESET:
    ; Inicia stack pointer
    ldi temp, high(RAMEND)
    out SPH, temp
    ldi temp, low(RAMEND)
    out SPL, temp

    ; Configurar puerto D como salida
    ldi temp, MASK_CONTROL
    out DDRD, temp
    ldi temp, 0x00
    out PORTD, temp

    ; Inicia comunicación serial
    call USART_Init

    ; Habilitar interrupciones globales
    sei

    ; Posición inicial
    call RESET_POSITION

MAIN_LOOP:
    rjmp MAIN_LOOP

USART_Init:
    ; Configurar baudios
    ldi temp, high(UBRR_VAL)
    sts UBRR0H, temp
    ldi temp, low(UBRR_VAL)
    sts UBRR0L, temp

    ; Habilitar receptor e interrupción de recepción
    ldi temp, (1<<RXEN0)|(1<<RXCIE0)
    sts UCSR0B, temp

    ; Configurar formato: 8 bits, 1 stop bit, sin paridad
    ldi temp, (1<<UCSZ01)|(1<<UCSZ00)
    sts UCSR0C, temp
    ret

; INTERRUPCIÓN DE RECEPCIÓN SERIAL 
USART_RXC:
    ; Guardar registros
    push temp
    in temp, SREG
    push temp

    ; Leer dato recibido
    lds comando, UDR0

    ; Procesar comando
    cpi comando, '1'
    breq DIBUJAR_TRIANGULO
    cpi comando, '2'
    breq DIBUJAR_CIRCULO
    cpi comando, '3'
    breq DIBUJAR_CRUZ
    cpi comando, 'T'
    breq DIBUJAR_TODOS
    cpi comando, 't'
    breq DIBUJAR_TODOS

    ; Restaurar registros y retornar
USART_RXC_END:
    pop temp
    out SREG, temp
    pop temp
    reti

;FUNCIONES DE DIBUJOS

DIBUJAR_TRIANGULO:
    call TRIANGULO
    rjmp USART_RXC_END

DIBUJAR_CIRCULO:
    call CIRCULO
    rjmp USART_RXC_END

DIBUJAR_CRUZ:
    call CRUZ
    rjmp USART_RXC_END

DIBUJAR_TODOS:
    call TRIANGULO
    call DELAY_LARGO_FUNC
    call CRUZ
    call DELAY_LARGO_FUNC
    call CIRCULO
    rjmp USART_RXC_END



